CCS PCM C Compiler, Version 4.065, 13791               10-nov-08 18:52

               Filename: main.lst

               ROM used: 366 words (9%)
                         Largest free fragment is 2048
               RAM used: 19 (7%) at main() level
                         30 (12%) worst case
               Stack:    3 worst case (2 in main + 1 for interrupts)

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   0D8
0003:  NOP
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  26
0008:  MOVF   7F,W
0009:  MOVWF  25
000A:  MOVF   0A,W
000B:  MOVWF  2D
000C:  CLRF   0A
000D:  SWAPF  25,F
000E:  MOVF   04,W
000F:  MOVWF  27
0010:  MOVF   20,W
0011:  MOVWF  28
0012:  MOVF   21,W
0013:  MOVWF  29
0014:  MOVF   22,W
0015:  MOVWF  2A
0016:  MOVF   23,W
0017:  MOVWF  2B
0018:  MOVF   24,W
0019:  MOVWF  2C
001A:  BCF    03.7
001B:  BCF    03.5
001C:  BTFSS  0B.5
001D:  GOTO   020
001E:  BTFSC  0B.2
001F:  GOTO   033
0020:  MOVF   27,W
0021:  MOVWF  04
0022:  MOVF   28,W
0023:  MOVWF  20
0024:  MOVF   29,W
0025:  MOVWF  21
0026:  MOVF   2A,W
0027:  MOVWF  22
0028:  MOVF   2B,W
0029:  MOVWF  23
002A:  MOVF   2C,W
002B:  MOVWF  24
002C:  MOVF   2D,W
002D:  MOVWF  0A
002E:  SWAPF  26,W
002F:  MOVWF  03
0030:  SWAPF  7F,F
0031:  SWAPF  7F,W
0032:  RETFIE
0033:  BCF    0A.3
0034:  GOTO   040
.................... #include <16F689.h> 
.................... //////// Standard Header file for the PIC16F689 device //////////////// 
.................... #device PIC16F689 
.................... #list 
....................  
.................... #device adc=8 
.................... #FUSES NOWDT, INTRC_IO, NOPROTECT, BROWNOUT, NOMCLR, NOCPD, PUT, IESO, FCMEN 
.................... #use delay(clock=8000000) 
*
004A:  MOVLW  08
004B:  SUBWF  37,F
004C:  BTFSS  03.0
004D:  GOTO   05A
004E:  MOVLW  37
004F:  MOVWF  04
0050:  BCF    03.7
0051:  BCF    03.0
0052:  RRF    00,F
0053:  MOVF   00,W
0054:  BTFSC  03.2
0055:  GOTO   05A
0056:  GOTO   058
0057:  NOP
0058:  DECFSZ 00,F
0059:  GOTO   057
005A:  RETLW  00
.................... #use rs232(baud=9600,parity=N,xmit=PIN_B7,rcv=PIN_B5,bits=8) 
....................  
....................  
.................... //********************************************************************** 
.................... int1 bInt100m; 
.................... int1 bUpDw; 
....................  
....................  
....................  
....................  
.................... //**************Interrupciones****************************************************** 
.................... #INT_RTCC 
.................... void intTareas() 
.................... { 
....................   
....................    static int iTemp=0;   // 
*
00FA:  CLRF   2F
....................    
....................  
....................   if(++iTemp>12)          //cuenta cada aprox. 100ms,cambia estado cada seg. 
*
0040:  INCF   2F,F
0041:  MOVF   2F,W
0042:  SUBLW  0C
0043:  BTFSC  03.0
0044:  GOTO   047
....................   { 
....................    bInt100m=TRUE; 
0045:  BSF    2E.0
....................    iTemp=0; 
0046:  CLRF   2F
....................   } 
....................  
....................    
....................  
.................... } 
....................  
....................  
.................... //******************************************************************************** 
0047:  BCF    0B.2
0048:  BCF    0A.3
0049:  GOTO   020
.................... void PWM(int8 iDuty) 
.................... { 
....................   unsigned long lDuty=0L; 
*
005B:  CLRF   32
005C:  CLRF   33
....................   int16 lY; 
....................    
....................       
....................   
....................       lDuty=(iDuty*1000)/100;     
005D:  CLRF   37
005E:  MOVF   31,W
005F:  MOVWF  36
0060:  MOVLW  03
0061:  MOVWF  39
0062:  MOVLW  E8
0063:  MOVWF  38
*
0078:  MOVF   22,W
0079:  MOVWF  37
007A:  MOVF   21,W
007B:  MOVWF  36
007C:  MOVF   37,W
007D:  MOVWF  39
007E:  MOVF   36,W
007F:  MOVWF  38
0080:  CLRF   3B
0081:  MOVLW  64
0082:  MOVWF  3A
*
00A7:  MOVF   22,W
00A8:  MOVWF  33
00A9:  MOVF   21,W
00AA:  MOVWF  32
....................       //printf(",%lu",lDuty); 
....................       output_low(PIN_A0); 
00AB:  BSF    03.5
00AC:  BCF    05.0
00AD:  BCF    03.5
00AE:  BCF    05.0
....................       delay_us(lDuty); 
00AF:  MOVF   33,W
00B0:  MOVWF  36
00B1:  INCF   36,F
00B2:  DECF   36,F
00B3:  BTFSC  03.2
00B4:  GOTO   0B9
00B5:  MOVLW  FF
00B6:  MOVWF  37
00B7:  CALL   04A
00B8:  GOTO   0B2
00B9:  MOVF   32,W
00BA:  MOVWF  37
00BB:  CALL   04A
....................       output_high(PIN_A0); 
00BC:  BSF    03.5
00BD:  BCF    05.0
00BE:  BCF    03.5
00BF:  BSF    05.0
....................       lY=1000-lDuty; 
00C0:  MOVF   32,W
00C1:  SUBLW  E8
00C2:  MOVWF  34
00C3:  MOVLW  03
00C4:  MOVWF  35
00C5:  MOVF   33,W
00C6:  BTFSS  03.0
00C7:  INCFSZ 33,W
00C8:  SUBWF  35,F
....................       //printf(",%lu",lY); 
....................       delay_us(lY);//1000-lDuty); 
00C9:  MOVF   35,W
00CA:  MOVWF  36
00CB:  INCF   36,F
00CC:  DECF   36,F
00CD:  BTFSC  03.2
00CE:  GOTO   0D3
00CF:  MOVLW  FF
00D0:  MOVWF  37
00D1:  CALL   04A
00D2:  GOTO   0CC
00D3:  MOVF   34,W
00D4:  MOVWF  37
00D5:  CALL   04A
.................... } 
00D6:  BCF    0A.3
00D7:  GOTO   16C (RETURN)
.................... //********************************************************************************* 
....................  
.................... void main() 
.................... { 
00D8:  CLRF   04
00D9:  BCF    03.7
00DA:  MOVLW  1F
00DB:  ANDWF  03,F
00DC:  MOVLW  71
00DD:  BSF    03.5
00DE:  MOVWF  0F
00DF:  MOVF   0F,W
00E0:  BCF    1B.3
00E1:  MOVLW  0C
00E2:  MOVWF  19
00E3:  MOVLW  A2
00E4:  MOVWF  18
00E5:  MOVLW  90
00E6:  BCF    03.5
00E7:  MOVWF  18
00E8:  BSF    03.6
00E9:  BCF    1F.0
00EA:  BCF    1F.1
00EB:  BCF    1F.2
00EC:  BCF    1F.3
00ED:  BCF    03.6
00EE:  BCF    1F.6
00EF:  MOVLW  00
00F0:  BSF    03.6
00F1:  MOVWF  1E
00F2:  CLRF   19
00F3:  CLRF   1A
00F4:  BSF    03.5
00F5:  CLRF   1E
00F6:  BCF    03.5
00F7:  CLRF   1B
00F8:  BCF    03.6
00F9:  BCF    0D.5
....................  
....................   unsigned int iNivel; 
....................  
....................    setup_adc_ports(NO_ANALOGS|VSS_VDD); 
*
00FB:  BSF    03.6
00FC:  BCF    1F.0
00FD:  BCF    1F.1
00FE:  BCF    1F.2
00FF:  BCF    1F.3
0100:  BCF    03.6
0101:  BCF    1F.6
0102:  MOVLW  00
0103:  BSF    03.6
0104:  MOVWF  1E
....................    setup_adc(ADC_OFF); 
0105:  BCF    03.6
0106:  BCF    1F.0
....................    setup_spi(SPI_SS_DISABLED); 
0107:  BCF    14.5
0108:  BSF    03.5
0109:  BCF    07.7
010A:  BSF    06.4
010B:  BCF    06.6
010C:  MOVLW  01
010D:  BCF    03.5
010E:  MOVWF  14
010F:  MOVLW  00
0110:  BSF    03.5
0111:  MOVWF  14
....................    setup_timer_0(RTCC_INTERNAL|RTCC_DIV_1); 
0112:  MOVF   01,W
0113:  ANDLW  C7
0114:  IORLW  08
0115:  MOVWF  01
....................    setup_timer_1(T1_DISABLED); 
0116:  BCF    03.5
0117:  CLRF   10
....................    setup_timer_2(T2_DISABLED,0,1); 
0118:  MOVLW  00
0119:  MOVWF  21
011A:  MOVWF  12
011B:  MOVLW  00
011C:  BSF    03.5
011D:  MOVWF  12
....................    setup_comparator(NC_NC_NC_NC); 
011E:  BCF    03.5
011F:  BSF    03.6
0120:  CLRF   19
0121:  CLRF   1A
0122:  BSF    03.5
0123:  CLRF   1E
0124:  BCF    03.5
0125:  CLRF   1B
0126:  BCF    03.6
0127:  BCF    0D.5
....................     
....................    setup_oscillator(OSC_8MHZ|OSC_INTRC);  
0128:  MOVLW  71
0129:  BSF    03.5
012A:  MOVWF  0F
012B:  MOVF   0F,W
....................    setup_timer_0(RTCC_INTERNAL|RTCC_DIV_64);  // 
012C:  MOVF   01,W
012D:  ANDLW  C0
012E:  IORLW  05
012F:  MOVWF  01
....................     
....................     
....................    bUpDw=TRUE; 
0130:  BCF    03.5
0131:  BSF    2E.1
....................    bInt100m=FALSE; 
0132:  BCF    2E.0
....................    iNivel=1; 
0133:  MOVLW  01
0134:  MOVWF  30
....................     
....................    printf("\r\nHola"); 
0135:  CLRF   31
0136:  MOVF   31,W
0137:  CALL   035
0138:  INCF   31,F
0139:  MOVWF  20
013A:  MOVF   20,W
013B:  BTFSS  0C.4
013C:  GOTO   13B
013D:  MOVWF  19
013E:  MOVLW  06
013F:  SUBWF  31,W
0140:  BTFSS  03.2
0141:  GOTO   136
....................     
....................    output_low(PIN_C0); 
0142:  BSF    03.5
0143:  BCF    07.0
0144:  BCF    03.5
0145:  BCF    07.0
....................    output_high(PIN_C1); 
0146:  BSF    03.5
0147:  BCF    07.1
0148:  BCF    03.5
0149:  BSF    07.1
....................     
....................     
....................    output_high(PIN_C0); 
014A:  BSF    03.5
014B:  BCF    07.0
014C:  BCF    03.5
014D:  BSF    07.0
....................    output_low(PIN_C1); 
014E:  BSF    03.5
014F:  BCF    07.1
0150:  BCF    03.5
0151:  BCF    07.1
....................     
....................    enable_interrupts(INT_RTCC); 
0152:  BSF    0B.5
....................    enable_interrupts(GLOBAL); 
0153:  MOVLW  C0
0154:  IORWF  0B,F
....................   
....................    while(TRUE) 
....................    { 
....................      if(bInt100m)  //cada 100ms 
0155:  BTFSS  2E.0
0156:  GOTO   169
....................      { 
....................        //printf("\r\n%d,%d",bUpDw,iNivel); 
....................       if(bUpDw) 
0157:  BTFSS  2E.1
0158:  GOTO   162
....................       { 
....................          
....................         if(++iNivel > 99) 
0159:  INCF   30,F
015A:  MOVF   30,W
015B:  SUBLW  63
015C:  BTFSC  03.0
015D:  GOTO   161
....................         { 
....................          iNivel=99; 
015E:  MOVLW  63
015F:  MOVWF  30
....................          bUpDw=FALSE; 
0160:  BCF    2E.1
....................         } 
....................       } 
....................       else 
0161:  GOTO   168
....................       { 
....................          
....................         if(--iNivel ==0xFF)  //¿¿ Roll-over ?? 
0162:  DECF   30,F
0163:  INCFSZ 30,W
0164:  GOTO   168
....................         { 
....................           iNivel=1; 
0165:  MOVLW  01
0166:  MOVWF  30
....................           bUpDw=TRUE; 
0167:  BSF    2E.1
....................         }   
....................       }   
....................          
....................          
....................         bInt100m=FALSE; 
0168:  BCF    2E.0
....................      } 
....................       
....................     PWM(iNivel); 
0169:  MOVF   30,W
016A:  MOVWF  31
016B:  GOTO   05B
....................    } 
016C:  GOTO   155
.................... } 
016D:  SLEEP

Configuration Fuses:
   Word  1: 3FC4   INTRC_IO NOPROTECT BROWNOUT NOMCLR NOCPD NOWDT PUT IESO FCMEN
